#!/bin/sh

TARGET="$1"

fio2cdm() {
    awk '
    /^Seq-Read:/          {getline;if($1~/^read/) {seqread =$3}}
    /^Seq-Write:/         {getline;if($1~/^write/){seqwrite=$3}}
    /^Rand-Read-512K:/    {getline;if($1~/^read/) {rread512 =$3}}
    /^Rand-Write-512K:/   {getline;if($1~/^write/){rwrite512=$3}}
    /^Rand-Read-4K:/      {getline;if($1~/^read/) {rread4 =$3}}
    /^Rand-Write-4K:/     {getline;if($1~/^write/){rwrite4=$3}}
    /^Rand-Read-4K-QD32:/ {getline;if($1~/^read/) {rread4qd32 =$3}}
    /^Rand-Write-4K-QD32:/{getline;if($1~/^write/){rwrite4qd32=$3}}
    function n(i) {
        split(i, a, "=");
        s = a[2];
        if (index(s, "KiB/s")) {
            s = s / 1024;
        } else if (index(s, "MiB/s")) {
            s = s + 0;
        } else {
            s = s / (1024 * 1024);
        }
        return s;
    }
    END {
        print ("|      | Read(MB/s)|Write(MB/s)|");
        print ("|------|-----------|-----------|");
        printf("|  Seq |%11.3f|%11.3f|\n", n(seqread),   n(seqwrite));
        printf("| 512K |%11.3f|%11.3f|\n", n(rread512),  n(rwrite512));
        printf("|   4K |%11.3f|%11.3f|\n", n(rread4),    n(rwrite4));
        printf("|4KQD32|%11.3f|%11.3f|\n", n(rread4qd32),n(rwrite4qd32));
    }
    '
}

trap "rm -f ${TARGET}/.fio-diskmark" 0 1 2 3 9 15

# sizeは適宜変更。サイズが大きいほどテストに時間がかかる
cat <<_EOL_ | fio - | fio2cdm
[global]
ioengine=libaio
iodepth=1
size=100m
direct=1
runtime=60
directory=${TARGET}
filename=.fio-diskmark

[Seq-Read]
bs=1m
rw=read
stonewall

[Seq-Write]
bs=1m
rw=write
stonewall

[Rand-Read-512K]
bs=512k
rw=randread
stonewall

[Rand-Write-512K]
bs=512k
rw=randwrite
stonewall

[Rand-Read-4K]
bs=4k
rw=randread
stonewall

[Rand-Write-4K]
bs=4k
rw=randwrite
stonewall

[Rand-Read-4K-QD32]
iodepth=32
bs=4k
rw=randread
stonewall

[Rand-Write-4K-QD32]
iodepth=32
bs=4k
rw=randwrite
stonewall
_EOL_
